/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Lib.MailSender;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class bar extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form bar
     */
    public bar(int num) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("progressing");
        bar.setStringPainted(true);
        if (num == 1) {
            Thread t = new Thread(this);
            t.start();
        } else if (num == 2) {
            Thread t = new Thread(new Runnable() {
                @Override
                public void run() {
                    int i = 0;
                    try {
                        while (i < 100) {
                            if (i > 0 && i <= 30) {
                                bar.setString("Đợi một tí nhé");
                            } else if (i > 30 && i <= 70) {
                                bar.setString("Đợi một tí nữa thôi");
                            } else if (i > 70 && i < 100) {
                                bar.setString("Sắp xong rồi");
                            }
                            bar.setValue(i + 10);
                            Thread.sleep(100);
                            i += 10;
                        }
                        JOptionPane.showMessageDialog(null, "Lưu thành công");
                        dispose();
                    } catch (Exception e) {
                    }
                }
            });
            t.start();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bar.setForeground(new java.awt.Color(51, 0, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar bar;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        int i = 0;
        try {
            while (i < 100) {
                if (i > 0 && i <= 30) {
                    bar.setString("Đợi một tí nhé");
                } else if (i > 30 && i <= 70) {
                    bar.setString("Đợi một tí nữa thôi");
                } else if (i > 70 && i < 100) {
                    bar.setString("Sắp xong rồi");
                }
                bar.setValue(i + 10);
                Thread.sleep(1300);
                if (i < 90) {
                    i += 10;
                }

                if (MailSender.b) {
                    System.out.println("");
                    i = 100;
                    bar.setValue(i);
                    bar.setString("Hoàn tất");
                    Thread.sleep(400);
                    JOptionPane.showMessageDialog(null, "Thư đã được gửi", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                }
            }
        } catch (Exception e) {
        }
    }
}
